{"version":3,"sources":["Actions/LocalStorage.js","Components/CreateGame.js","Actions/HanabiDispatcher.js","Components/Card.js","Components/SelectedCard.js","Components/Player.js","Components/Game.js","App.js","registerServiceWorker.js","index.js"],"names":["createGame","playerNames","gameInit","hanabi","localStorage","setItem","id","JSON","stringify","getGame","wipe","removeItem","load","gid","callback","storedGameString","getItem","storedGame","parse","partialGame","loadGame","console","log","save","game","getCurrPlayerState","playerId","players","whosTurn","getPlayerGameState","play","self","res","discard","advise","colorOrNum","advisor","to","findIndex","p","hand","c","CreateGame","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","gameType","numPlayers","player1","player2","player3","player4","player5","i","push","LocalStorage","window","location","href","gameWasCreated","bind","val","setState","e","defineProperty","target","attributes","player","value","_this2","Array","fill","map","everyoneHasNames","every","playerName","length","dupNames","toConsumableArray","Set","localColor","onlineColor","a","react_default","createElement","reactstrap_es","key","active","color","onClick","playerNamesEl","xs","size","offset","filter","n","placeholder","onChange","nameChange","onRadioClick","Component","HanabiDispatcher","Dispatcher","cardSelected","cardProps","isYou","dispatch","source","cardId","props","moveMade","Card","selected","register","eventReceived","unregister","event","colors","className","numbers","clickHandler","played","undefined","number","SelectedCard","gotMoveResult","Player","name","you","lastMove","Components_Card","assign","cards","cardClicked","Game","dev","noBackend","alert","backend","isLocal","playerGameState","selectedCard","gameLoaded","selectedCardProps","objectSpread","countDown","gotCurrPlayerState","confirm","split","newCountDown","setTimeout","_this3","_this4","bombs","b","react_fontawesome_default","icon","faBomb","advice","faCommentAlt","keys","Components_Player","orderedDiscards","red","blue","green","white","yellow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","discards","Symbol","iterator","next","done","card","err","return","od","sort","c1","c2","j","slice","Components_SelectedCard","cardsInDeck","multi","bar","animated","wipeGame","App","gameId","params","_p$split","_p$split2","slicedToArray","toLowerCase","currentLocalGames","getOwnPropertyNames","isLocalGame","indexOf","localGameButtons","Date","giddate","localGameChosen","toLocaleDateString","toLocaleTimeString","Components_Game","Components_CreateGame","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.57d851a5.chunk.js","sourcesContent":["//import dispatcher from '../dispatcher';\r\nimport hanabi from 'hanabi-node';\r\n\r\nexport function createGame(playerNames){\r\n\tconst gameInit = hanabi.createGame({playerNames});\r\n\r\n\tlocalStorage.setItem(\"game\" + gameInit.id,\r\n\t\tJSON.stringify(hanabi.getGame()));\r\n\treturn gameInit;\r\n}\r\n\r\nexport function wipe(){\r\n\tlocalStorage.removeItem(\"game\"+hanabi.getGame().id);\r\n}\r\n\r\nexport function load(gid, callback){\r\n\tconst storedGameString = localStorage.getItem('game'+gid);\r\n\tconst storedGame = JSON.parse(storedGameString);\r\n\tconst partialGame = hanabi.loadGame(storedGame);\r\n\tconsole.log('game', hanabi.getGame());\r\n\tcallback(partialGame);\r\n}\r\n\r\nfunction save(){\r\n\tconst game = hanabi.getGame();\r\n\tlocalStorage.setItem('game'+game.id, JSON.stringify(game));\r\n}\r\n\r\nexport function getCurrPlayerState(callback){\r\n\tconst game = hanabi.getGame();\r\n\tconst playerId = game.players[game.whosTurn].id;\r\n\tconst playerState = hanabi.getPlayerGameState(playerId);\r\n\tcallback(playerState);\r\n}\r\n\r\nexport function play(id, callback){\r\n\tconst game = hanabi.getGame();\r\n\tconst self = game.players[game.whosTurn].id;\r\n\tconst res = hanabi.play(self, id);\r\n\tconsole.log('play res', res);\r\n\tsave();\r\n\tcallback(res);\r\n}\r\n\r\nexport function discard(id, callback){\r\n\tconst game = hanabi.getGame();\r\n\tconst self = game.players[game.whosTurn].id;\r\n\tconst res = hanabi.discard(self, id);\r\n\tconsole.log('discard res', res);\r\n\tsave();\r\n\tcallback(res);\r\n}\r\n\r\nexport function advise(id, colorOrNum, callback){\r\n\tconst game = hanabi.getGame();\r\n\tconst advisor = game.players[game.whosTurn].id;\r\n\tconst to = game.players.findIndex(p=>p.hand.findIndex(c=>c.id === id) >= 0);\r\n\tconst res = hanabi.advise(advisor, to, colorOrNum);\r\n\tconsole.log('advise res', res);\r\n\tconsole.log('game', hanabi.getGame());\r\n\tsave();\r\n\tcallback(res);\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n\tButton,\r\n\tButtonGroup,\r\n\tInput,\r\n\tInputGroup,\r\n\tInputGroupButton,\r\n\tRow,\r\n\tCol\r\n} from \"reactstrap\";\r\nimport * as LocalStorage from \"../Actions/LocalStorage\";\r\n\r\nclass CreateGame extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tgameType: \"local\",\r\n\t\t\tnumPlayers: 2,\r\n\t\t\tplayer1: \"Charlie\",\r\n\t\t\tplayer2: \"Thomas\",\r\n\t\t\tplayer3: \"Guy\",\r\n\t\t\tplayer4: \"Jordan\",\r\n\t\t\tplayer5: \"\"\r\n\t\t};\r\n\t}\r\n\tcreateGame() {\r\n\t\tlet playerNames = [];\r\n\t\tfor (let i = 0; i < this.state.numPlayers; i++) {\r\n\t\t\tplayerNames.push(this.state[\"player\" + (i + 1)]);\r\n\t\t}\r\n\t\tif (this.state.gameType === \"local\") {\r\n\t\t\tconst gameInit = LocalStorage.createGame(playerNames);\r\n\t\t\twindow.location.href += \"?id=\" + gameInit.id;\r\n\t\t\tthis.gameWasCreated.bind(this)(gameInit);\r\n\t\t} else {\r\n\t\t\t//hit api with create game request, then run gameWasCreated\r\n\t\t}\r\n\t}\r\n\tgameWasCreated(gameInit) {\r\n\t\tconsole.log(\"game was created\", gameInit);\r\n\t}\r\n\tonRadioClick(val) {\r\n\t\tthis.setState({\r\n\t\t\tgameType: val\r\n\t\t});\r\n\t}\r\n\tnameChange(e) {\r\n\t\tthis.setState({\r\n\t\t\t[\"player\" + (+e.target.attributes.player.value + 1)]: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst playerNames = Array(this.state.numPlayers)\r\n\t\t\t.fill(\"player\")\r\n\t\t\t.map((p, i) => p + (i + 1))\r\n\t\t\t.map(p => this.state[p]);\r\n\r\n\t\tconst everyoneHasNames = playerNames.every(\r\n\t\t\tplayerName => playerName.length > 0\r\n\t\t);\r\n\t\tconst dupNames = [...new Set(playerNames)].length !== playerNames.length;\r\n\r\n\t\tconst localColor =\r\n\t\t\tthis.state.gameType === \"local\" ? \"success\" : \"secondary\";\r\n\t\tconst onlineColor =\r\n\t\t\tthis.state.gameType === \"online\" ? \"success\" : \"secondary\";\r\n\t\tconst numPlayers = Array(4)\r\n\t\t\t.fill(\"\")\r\n\t\t\t.map((a, i) => (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tactive={this.state.numPlayers === 2 + i}\r\n\t\t\t\t\tcolor={this.state.numPlayers === 2 + i ? \"success\" : \"secondary\"}\r\n\t\t\t\t\tonClick={() => this.setState({ numPlayers: i + 2 })}\r\n\t\t\t\t>\r\n\t\t\t\t\t{2 + i}\r\n\t\t\t\t</Button>\r\n\t\t\t));\r\n\r\n\t\tconst playerNamesEl = Array(this.state.numPlayers)\r\n\t\t\t.fill(\"\")\r\n\t\t\t.map((a, i) => (\r\n\t\t\t\t<Row key={i}>\r\n\t\t\t\t\t<Col xs={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t{this.state[\"player\" + (i + 1)].length > 0 &&\r\n\t\t\t\t\t\t\t\tplayerNames.filter(n => n === this.state[\"player\" + (i + 1)])\r\n\t\t\t\t\t\t\t\t\t.length > 1 && (\r\n\t\t\t\t\t\t\t\t\t<InputGroupButton color=\"danger\">\r\n\t\t\t\t\t\t\t\t\t\tDuplicate Name\r\n\t\t\t\t\t\t\t\t\t</InputGroupButton>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tplayer={i}\r\n\t\t\t\t\t\t\t\tplaceholder={\"Player \" + (i + 1) + \"'s name\"}\r\n\t\t\t\t\t\t\t\tonChange={this.nameChange.bind(this)}\r\n\t\t\t\t\t\t\t\tvalue={this.state[\"player\" + (i + 1)]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t));\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Create a Hanabi Game!</h1>\r\n\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor={localColor}\r\n\t\t\t\t\t\tonClick={() => this.onRadioClick(\"local\")}\r\n\t\t\t\t\t\tactive={this.state.gameType === \"local\"}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLocal Game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor={onlineColor}\r\n\t\t\t\t\t\tonClick={() => this.onRadioClick(\"online\")}\r\n\t\t\t\t\t\tactive={this.state.gameType === \"online\"}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tOnline Game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t<Button color=\"\">How Many Players?</Button>\r\n\t\t\t\t\t{numPlayers}\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t{playerNamesEl}\r\n\t\t\t\t<br />\r\n\t\t\t\t{!dupNames && everyoneHasNames && (\r\n\t\t\t\t\t<Button onClick={this.createGame.bind(this)} color=\"success\">\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t\t{!everyoneHasNames && (\r\n\t\t\t\t\t<Button color=\"danger\">Give Each Player a Name</Button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CreateGame;\r\n","import { Dispatcher } from 'flux';\r\nvar HanabiDispatcher = new Dispatcher();\r\n\r\nHanabiDispatcher.cardSelected = function(cardProps, playerName, isYou){\r\n\tthis.dispatch({\r\n\t\tsource : \"CARD_SELECTED\",\r\n\t\tcardId : cardProps.id,\r\n\t\tprops  : cardProps,\r\n\t\tplayerName,\r\n\t\tisYou\r\n\t});\r\n};\r\n\r\nHanabiDispatcher.moveMade = function(){\r\n\tthis.dispatch({\r\n\t\tsource : \"MOVE_MADE\"\r\n\t});\r\n}\r\n\r\nexport default HanabiDispatcher;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport HanabiDispatcher from '../Actions/HanabiDispatcher';\r\n\r\nclass Card extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tselected : false\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.register = HanabiDispatcher.register(this.eventReceived.bind(this));\r\n\t}\r\n\tcomponentWillUnmount(){\r\n\t\tHanabiDispatcher.unregister(this.register);\r\n\t}\r\n\teventReceived(event) {\r\n\t\tswitch(event.source){\r\n\t\t\tcase \"CARD_SELECTED\":\r\n\t\t\t\tthis.setState({selected : event.cardId === this.props.id && !this.state.selected});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\t//if it's the \"played\" card stack, props.colors doesn't exist\r\n\t\t//so I'll null coalesce and it won't show below\r\n\t\tconst colors = (this.props.colors || []).map((c,i)=>\r\n\t\t\t<span key={i} className={'advise color ' + c} />\r\n\t\t);\r\n\t\tconst numbers = (this.props.numbers || []).map((n,i)=>\r\n\t\t\t<span key={i} className={'advise number ' + n}>{n}</span>\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<div onClick={()=>this.props.clickHandler(this.props.id)}\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tthis.props.color + ' gamecard ' +\r\n\t\t\t\t\t(this.props.played ? ' played ' : '') + \r\n\t\t\t\t\t(this.state.selected ? ' selected ' : '')\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"playedNumber\">\r\n\t\t\t\t\t\t\t{this.props.number === undefined ? '?' : this.props.number}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.props.discard || this.props.played) ? '' : (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{colors}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{numbers}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Card;\r\nCard.propTypes = {\r\n\tplayed       : PropTypes.bool,\r\n\tcolor        : PropTypes.string,\r\n\tnumber       : PropTypes.number,\r\n\tclickHandler : PropTypes.func,\r\n\tid           : PropTypes.number,\r\n\tselected     : PropTypes.bool,\r\n\tcolors       : PropTypes.array,\r\n\tnumbers      : PropTypes.array,\r\n\tdiscard      : PropTypes.bool\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport * as LocalStorage from '../Actions/LocalStorage';\r\nimport HanabiDispatcher from '../Actions/HanabiDispatcher';\r\n\r\nclass SelectedCard extends Component {\r\n\tplay() {\r\n\t\tLocalStorage.play(this.props.id, this.gotMoveResult.bind(this));\r\n\t}\r\n\tdiscard() {\r\n\t\tLocalStorage.discard(this.props.id, this.gotMoveResult.bind(this));\r\n\t}\r\n\tcolor() {\r\n\t\tLocalStorage.advise(this.props.id, this.props.color, this.gotMoveResult.bind(this));\r\n\t}\r\n\tnumber() {\r\n\t\tLocalStorage.advise(this.props.id, this.props.number, this.gotMoveResult.bind(this));\r\n\t}\r\n\tgotMoveResult() {\r\n\t\tHanabiDispatcher.moveMade();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{this.props.isYou ? \"your\" : this.props.playerName + \"'s\"} card\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.isYou ? (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={this.play.bind(this)} color=\"primary\">Play</Button>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.props.advise < 8 ?\r\n\t\t\t\t\t\t\t\t\t\t\t<Button onClick={this.discard.bind(this)} color=\"warning\">Discard</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<div>Cannot discard with full advise</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.props.advise > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={this.color.bind(this)} color=\"info\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdvise All {this.props.color}s\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={this.number.bind(this)} color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdvise All {this.props.number}s\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>No advise tokens</span>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SelectedCard;\r\n\r\nSelectedCard.propTypes = {\r\n\tid: PropTypes.number,\r\n\tcolor: PropTypes.string,\r\n\tnumber: PropTypes.number,\r\n\tisYou: PropTypes.bool,\r\n\tplayerName: PropTypes.string,\r\n\tadvise    : PropTypes.number\r\n}","import React, { Component } from 'react';\r\nimport Card from './Card';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport HanabiDispatcher from '../Actions/HanabiDispatcher';\r\n\r\nclass Player extends Component {\r\n\tcardClicked(id) {\r\n\t\tHanabiDispatcher.cardSelected(\r\n\t\t\tthis.props.hand.filter(c => c.id === id)[0],\r\n\t\t\tthis.props.name,\r\n\t\t\tthis.props.you\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\tlet lastMove = '';\r\n\t\tif (this.props.lastMove) {\r\n\t\t\tswitch (this.props.lastMove[0]) {\r\n\t\t\t\tcase \"Play\":\r\n\t\t\t\t\tif (this.props.lastMove[1]) {\r\n\t\t\t\t\t\tlastMove = (\r\n\t\t\t\t\t\t\t<div className=\"lastMove\">\r\n\t\t\t\t\t\t\t\tPlayed a <Card discard {...this.props.lastMove[2]} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlastMove = (\r\n\t\t\t\t\t\t\t<div className=\"lastMove\">\r\n\t\t\t\t\t\t\t\tTried to play a <Card discard {...this.props.lastMove[2]} /> but it didn&#039;t play\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Advise\":\r\n\t\t\t\t\tlastMove = (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tTold {this.props.lastMove[1]} about their {this.props.lastMove[2]}&#039;s\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Discard\":\r\n\t\t\t\t\tlastMove = (\r\n\t\t\t\t\t\t<div className=\"lastMove\">\r\n\t\t\t\t\t\t\tDiscarded a <Card discard {...this.props.lastMove[1]} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst cards = this.props.hand.map((c, i) =>\r\n\t\t\t<Card clickHandler={this.cardClicked.bind(this)} key={i} {...c} />\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs={12}>\r\n\t\t\t\t\t\t{this.props.name}\r\n\t\t\t\t\t\t{this.props.you && \" (you)\"}\r\n\t\t\t\t\t\t{lastMove}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs={12}>\r\n\t\t\t\t\t\t{cards}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Player;\r\nPlayer.propTypes = {\r\n\tname: PropTypes.string,\r\n\thand: PropTypes.array,\r\n\tyou: PropTypes.bool,\r\n\tlastMove: PropTypes.array\r\n}","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Progress, Button } from 'reactstrap';\r\nimport * as LocalStorage from '../Actions/LocalStorage';\r\nimport Card from './Card';\r\nimport PropTypes from 'prop-types';\r\nimport SelectedCard from './SelectedCard';\r\nimport Player from './Player';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\r\nimport { faBomb } from '@fortawesome/fontawesome-free-solid';\r\nimport { faCommentAlt } from '@fortawesome/fontawesome-free-regular';\r\nimport HanabiDispatcher from '../Actions/HanabiDispatcher';\r\n\r\nclass Game extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst backend = props.isLocal ?\r\n\t\t\tLocalStorage : this.noBackend;\r\n\t\tthis.state = {\r\n\t\t\tbackend,\r\n\t\t\tplayerGameState : {},\r\n\t\t\tselectedCard    : undefined\r\n\t\t}\r\n\t}\r\n\tdev = false;\r\n\tcomponentDidMount() {\r\n\t\tthis.state.backend.load(this.props.id, this.gameLoaded.bind(this));\r\n\t\tHanabiDispatcher.register(this.eventReceived.bind(this));\r\n\t}\r\n\teventReceived(event){\r\n\t\tswitch(event.source){\r\n\t\t\tcase \"CARD_SELECTED\":\r\n\t\t\t\t//if we re-select the card, deselect it\r\n\t\t\t\t//otherwise set selected card to it\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tselectedCard      : this.state.selectedCard === event.cardId ? undefined : event.cardId,\r\n\t\t\t\t\tselectedCardProps : {\r\n\t\t\t\t\t\t...event.props,\r\n\t\t\t\t\t\tplayerName : event.playerName,\r\n\t\t\t\t\t\tisYou      : event.isYou\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"MOVE_MADE\":\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcountDown : this.dev ? 3 : 5\r\n\t\t\t\t});\r\n\t\t\t\tthis.state.backend.getCurrPlayerState(this.gotCurrPlayerState.bind(this));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\tnoBackend =\r\n\t\t{\r\n\t\t\tload : function () {\r\n\t\t\t\talert(\"you tried to play a game with no backend (probably online)\");\r\n\t\t\t}\r\n\t\t}\r\n\twipeGame(){\r\n\t\tif(window.confirm(\"Permanently delete this game\")){\r\n\t\t\tLocalStorage.wipe();\r\n\t\t\twindow.location.href = window.location.href.split('?')[0];\r\n\t\t}\r\n\t}\r\n\tgameLoaded(gameInit) {\r\n\t\tthis.state.backend.getCurrPlayerState(this.gotCurrPlayerState.bind(this));\r\n\t}\r\n\tcountDown() {\r\n\t\tconst newCountDown = this.state.countDown - 1;\r\n\t\tthis.setState({\r\n\t\t\tcountDown : newCountDown\r\n\t\t});\r\n\t\tif (newCountDown > 0) setTimeout(() => this.countDown(), this.dev ? 200 : 1000);\r\n\t}\r\n\r\n\tgotCurrPlayerState(playerGameState) {\r\n\t\tconsole.log(\"playerGameState\", playerGameState);\r\n\t\tif(this.props.isLocal){\r\n\t\t\tthis.setState({\r\n\t\t\t\tcountDown : this.dev ? 3 : 5\r\n\t\t\t});\r\n\t\t\tsetTimeout(() => this.countDown(), this.dev ? 200 : 1000);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tplayerGameState,\r\n\t\t\tlastMove     : playerGameState.lastMove,\r\n\t\t\tplayerName   : playerGameState.players.filter(p=>p.you)[0].name,\r\n\t\t\tselectedCard : undefined\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst bombs = Array(this.state.playerGameState.bombs || 0).fill('').map((b, i) =>\r\n\t\t\t<FontAwesomeIcon key={i} icon={faBomb} size=\"lg\" />\r\n\t\t);\r\n\t\tconst advice = Array(this.state.playerGameState.advice || 0).fill('').map((b, i) =>\r\n\t\t\t<FontAwesomeIcon className=\"advice\" key={i} icon={faCommentAlt} size=\"lg\" />\r\n\t\t);\r\n\t\tconst played = Object.keys(this.state.playerGameState.played || {}).map((c, i) =>\r\n\t\t\t<Card clickHandler={()=>{}} key={i} color={c} number={this.state.playerGameState.played[c]} played />\r\n\t\t);\r\n\t\tconst players = (this.state.playerGameState.players || []).map((p, i) =>\r\n\t\t\t<Player key={i} {...p} />\r\n\t\t);\r\n\t\tlet orderedDiscards = {\r\n\t\t\tred    : [],\r\n\t\t\tblue   : [],\r\n\t\t\tgreen  : [],\r\n\t\t\twhite  : [],\r\n\t\t\tyellow : []\r\n\t\t};\r\n\t\tfor(let card of (this.state.playerGameState.discards||[])){\r\n\t\t\torderedDiscards[card.color].push(card);\r\n\t\t}\r\n\t\tconst discards = Object.keys(orderedDiscards).map((od,i)=>\r\n\t\t\t<div key={i}>\r\n\t\t\t\t{\r\n\t\t\t\t\torderedDiscards[od].sort((c1,c2)=> c1.number-c2.number).map((c,j)=>\r\n\t\t\t\t\t\t<Card clickHandler={()=>{}} key={j} {...c} discard />\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t\tlet lastMove = '';\r\n\t\tif (this.state.lastMove) {\r\n\t\t\tswitch (this.state.lastMove[0]) {\r\n\t\t\t\tcase \"Play\":\r\n\t\t\t\t\tif (this.state.lastMove[1]) {\r\n\t\t\t\t\t\tlastMove = (\r\n\t\t\t\t\t\t\t<div className=\"lastMove\">\r\n\t\t\t\t\t\t\t\t{this.state.lastMove.slice(-1)[0]} Played a <Card discard {...this.state.lastMove[2]} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlastMove = (\r\n\t\t\t\t\t\t\t<div className=\"lastMove\">\r\n\t\t\t\t\t\t\t\t{this.state.lastMove.slice(-1)[0]} Tried to play a\r\n\t\t\t\t\t\t\t\t<Card discard {...this.state.lastMove[2]} />\r\n\t\t\t\t\t\t\t\tbut it didn&#039;t play\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Advise\":\r\n\t\t\t\t\tlastMove = (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{this.state.lastMove.slice(-1)[0]}\r\n\t\t\t\t\t\t\tTold {this.state.lastMove[1]} about their {this.state.lastMove[2]}&#039;s\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Discard\":\r\n\t\t\t\t\tlastMove = (\r\n\t\t\t\t\t\t<div className=\"lastMove\">\r\n\t\t\t\t\t\t\t{this.state.lastMove.slice(-1)[0]} Discarded a\r\n\t\t\t\t\t\t\t<Card discard {...this.state.lastMove[1]} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.countDown > 0 ?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Preparing for {this.state.playerName}&#39;s Turn </h1>\r\n\t\t\t\t\t\t\t\t<h1>{this.state.countDown}</h1>\r\n\t\t\t\t\t\t\t\t{lastMove}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h3>{this.state.playerName}&#39;s Turn</h3>\r\n\t\t\t\t\t\t\t\t{players}\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.state.selectedCard &&\r\n\t\t\t\t\t\t\t\t\t<SelectedCard id={this.state.selectedCard}\r\n\t\t\t\t\t\t\t\t\t\t{...this.state.selectedCardProps}\r\n\t\t\t\t\t\t\t\t\t\tadvise={this.state.playerGameState.advice} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div className=\"discards\">\r\n\t\t\t\t\t<h3>Discards</h3>\r\n\t\t\t\t\t{discards}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>Played Cards</h3>\r\n\t\t\t\t{played}\r\n\t\t\t\t<br />\r\n\t\t\t\t<div className=\"iconHolder\">{advice}</div>\r\n\t\t\t\t<div className=\"iconHolder\">{bombs}</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.playerGameState.id && (\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Row id=\"deckLeft\"><Col xs={{ size : 10, offset : 1 }}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{this.state.playerGameState.cardsInDeck} cards left\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Progress multi>\r\n\t\t\t\t\t\t\t\t\t<Progress bar\r\n\t\t\t\t\t\t\t\t\t\tvalue={(50 - this.state.playerGameState.cardsInDeck) * 2}\r\n\t\t\t\t\t\t\t\t\t\tanimated color='warning' />\r\n\t\t\t\t\t\t\t\t\t<Progress bar value={this.state.playerGameState.cardsInDeck * 2} />\r\n\t\t\t\t\t\t\t\t</Progress>\r\n\t\t\t\t\t\t\t</Col></Row>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t{this.props.isLocal && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button onClick={this.wipeGame.bind(this)} color=\"danger\">Wipe Game</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Game;\r\nGame.propTypes = {\r\n\tisLocal : PropTypes.bool,\r\n\tid      : PropTypes.string\r\n}","import { Button } from 'reactstrap';\r\nimport CreateGame from './Components/CreateGame';\r\nimport Game from './Components/Game';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst href = window.location.href.split('?');\r\n\t\tlet gameId = undefined;\r\n\t\tif (href.length === 2) {\r\n\t\t\tconst params = href[1].split('&');\r\n\t\t\tfor (let p of params) {\r\n\t\t\t\tlet [key, val] = p.split('=');\r\n\t\t\t\tif (key.toLowerCase() === 'id') {\r\n\t\t\t\t\tgameId = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst currentLocalGames = Object.getOwnPropertyNames(localStorage);\r\n\t\tconst isLocalGame = currentLocalGames.indexOf('game'+gameId) > -1;\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tgameId,\r\n\t\t\tisLocalGame,\r\n\t\t\tcurrentLocalGames\r\n\t\t};\r\n\t}\r\n\tlocalGameChosen(gameId){\r\n\t\tconsole.log('gid', gameId);\r\n\t\twindow.location.href = window.location.href.split('?')[0] + '?id='+gameId.slice(4);\r\n\t}\r\n\trender() {\r\n\t\tconst localGameButtons = this.state.currentLocalGames\r\n\t\t\t.filter(gid => gid !== 'game'+this.state.gameId)\r\n\t\t\t.map(gid=>[gid,new Date(+gid.split('-')[0].slice(4))])\r\n\t\t\t.map((giddate,i) =>\r\n\t\t\t\t<Button key={i} color=\"\"\r\n\t\t\t\t\tonClick={()=>this.localGameChosen.bind(this)(giddate[0])}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Game started: \" + \r\n\t\t\t\t\t\tgiddate[1].toLocaleDateString() + \" \" +\r\n\t\t\t\t\t\tgiddate[1].toLocaleTimeString()\r\n\t\t\t\t\t}\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.gameId ?\r\n\t\t\t\t\t\t<Game id={this.state.gameId} isLocal={this.state.isLocalGame} />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<CreateGame />\r\n\t\t\t\t}\r\n\t\t\t\t<br />\r\n\t\t\t\t{localGameButtons}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './game.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}